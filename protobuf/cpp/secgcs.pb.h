// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: secgcs.proto

#ifndef PROTOBUF_secgcs_2eproto__INCLUDED
#define PROTOBUF_secgcs_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_secgcs_2eproto();
void protobuf_AssignDesc_secgcs_2eproto();
void protobuf_ShutdownFile_secgcs_2eproto();

class QGCData;

// ===================================================================

class QGCData : public ::google::protobuf::Message {
 public:
  QGCData();
  virtual ~QGCData();

  QGCData(const QGCData& from);

  inline QGCData& operator=(const QGCData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QGCData& default_instance();

  void Swap(QGCData* other);

  // implements Message ----------------------------------------------

  QGCData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QGCData& from);
  void MergeFrom(const QGCData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string msg_type = 1;
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  inline const ::std::string& msg_type() const;
  inline void set_msg_type(const ::std::string& value);
  inline void set_msg_type(const char* value);
  inline void set_msg_type(const char* value, size_t size);
  inline ::std::string* mutable_msg_type();
  inline ::std::string* release_msg_type();
  inline void set_allocated_msg_type(::std::string* msg_type);

  // required double latitude = 2;
  inline bool has_latitude() const;
  inline void clear_latitude();
  static const int kLatitudeFieldNumber = 2;
  inline double latitude() const;
  inline void set_latitude(double value);

  // required double longitude = 3;
  inline bool has_longitude() const;
  inline void clear_longitude();
  static const int kLongitudeFieldNumber = 3;
  inline double longitude() const;
  inline void set_longitude(double value);

  // required double heading = 4;
  inline bool has_heading() const;
  inline void clear_heading();
  static const int kHeadingFieldNumber = 4;
  inline double heading() const;
  inline void set_heading(double value);

  // required double altitude = 5;
  inline bool has_altitude() const;
  inline void clear_altitude();
  static const int kAltitudeFieldNumber = 5;
  inline double altitude() const;
  inline void set_altitude(double value);

  // optional int32 outside_temp = 6;
  inline bool has_outside_temp() const;
  inline void clear_outside_temp();
  static const int kOutsideTempFieldNumber = 6;
  inline ::google::protobuf::int32 outside_temp() const;
  inline void set_outside_temp(::google::protobuf::int32 value);

  // optional int32 batt_tmp = 7;
  inline bool has_batt_tmp() const;
  inline void clear_batt_tmp();
  static const int kBattTmpFieldNumber = 7;
  inline ::google::protobuf::int32 batt_tmp() const;
  inline void set_batt_tmp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:QGCData)
 private:
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_latitude();
  inline void clear_has_latitude();
  inline void set_has_longitude();
  inline void clear_has_longitude();
  inline void set_has_heading();
  inline void clear_has_heading();
  inline void set_has_altitude();
  inline void clear_has_altitude();
  inline void set_has_outside_temp();
  inline void clear_has_outside_temp();
  inline void set_has_batt_tmp();
  inline void clear_has_batt_tmp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* msg_type_;
  double latitude_;
  double longitude_;
  double heading_;
  double altitude_;
  ::google::protobuf::int32 outside_temp_;
  ::google::protobuf::int32 batt_tmp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_secgcs_2eproto();
  friend void protobuf_AssignDesc_secgcs_2eproto();
  friend void protobuf_ShutdownFile_secgcs_2eproto();

  void InitAsDefaultInstance();
  static QGCData* default_instance_;
};
// ===================================================================


// ===================================================================

// QGCData

// required string msg_type = 1;
inline bool QGCData::has_msg_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void QGCData::set_has_msg_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void QGCData::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void QGCData::clear_msg_type() {
  if (msg_type_ != &::google::protobuf::internal::kEmptyString) {
    msg_type_->clear();
  }
  clear_has_msg_type();
}
inline const ::std::string& QGCData::msg_type() const {
  return *msg_type_;
}
inline void QGCData::set_msg_type(const ::std::string& value) {
  set_has_msg_type();
  if (msg_type_ == &::google::protobuf::internal::kEmptyString) {
    msg_type_ = new ::std::string;
  }
  msg_type_->assign(value);
}
inline void QGCData::set_msg_type(const char* value) {
  set_has_msg_type();
  if (msg_type_ == &::google::protobuf::internal::kEmptyString) {
    msg_type_ = new ::std::string;
  }
  msg_type_->assign(value);
}
inline void QGCData::set_msg_type(const char* value, size_t size) {
  set_has_msg_type();
  if (msg_type_ == &::google::protobuf::internal::kEmptyString) {
    msg_type_ = new ::std::string;
  }
  msg_type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* QGCData::mutable_msg_type() {
  set_has_msg_type();
  if (msg_type_ == &::google::protobuf::internal::kEmptyString) {
    msg_type_ = new ::std::string;
  }
  return msg_type_;
}
inline ::std::string* QGCData::release_msg_type() {
  clear_has_msg_type();
  if (msg_type_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = msg_type_;
    msg_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void QGCData::set_allocated_msg_type(::std::string* msg_type) {
  if (msg_type_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_type_;
  }
  if (msg_type) {
    set_has_msg_type();
    msg_type_ = msg_type;
  } else {
    clear_has_msg_type();
    msg_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required double latitude = 2;
inline bool QGCData::has_latitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void QGCData::set_has_latitude() {
  _has_bits_[0] |= 0x00000002u;
}
inline void QGCData::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void QGCData::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline double QGCData::latitude() const {
  return latitude_;
}
inline void QGCData::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
}

// required double longitude = 3;
inline bool QGCData::has_longitude() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void QGCData::set_has_longitude() {
  _has_bits_[0] |= 0x00000004u;
}
inline void QGCData::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void QGCData::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline double QGCData::longitude() const {
  return longitude_;
}
inline void QGCData::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
}

// required double heading = 4;
inline bool QGCData::has_heading() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void QGCData::set_has_heading() {
  _has_bits_[0] |= 0x00000008u;
}
inline void QGCData::clear_has_heading() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void QGCData::clear_heading() {
  heading_ = 0;
  clear_has_heading();
}
inline double QGCData::heading() const {
  return heading_;
}
inline void QGCData::set_heading(double value) {
  set_has_heading();
  heading_ = value;
}

// required double altitude = 5;
inline bool QGCData::has_altitude() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void QGCData::set_has_altitude() {
  _has_bits_[0] |= 0x00000010u;
}
inline void QGCData::clear_has_altitude() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void QGCData::clear_altitude() {
  altitude_ = 0;
  clear_has_altitude();
}
inline double QGCData::altitude() const {
  return altitude_;
}
inline void QGCData::set_altitude(double value) {
  set_has_altitude();
  altitude_ = value;
}

// optional int32 outside_temp = 6;
inline bool QGCData::has_outside_temp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void QGCData::set_has_outside_temp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void QGCData::clear_has_outside_temp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void QGCData::clear_outside_temp() {
  outside_temp_ = 0;
  clear_has_outside_temp();
}
inline ::google::protobuf::int32 QGCData::outside_temp() const {
  return outside_temp_;
}
inline void QGCData::set_outside_temp(::google::protobuf::int32 value) {
  set_has_outside_temp();
  outside_temp_ = value;
}

// optional int32 batt_tmp = 7;
inline bool QGCData::has_batt_tmp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void QGCData::set_has_batt_tmp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void QGCData::clear_has_batt_tmp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void QGCData::clear_batt_tmp() {
  batt_tmp_ = 0;
  clear_has_batt_tmp();
}
inline ::google::protobuf::int32 QGCData::batt_tmp() const {
  return batt_tmp_;
}
inline void QGCData::set_batt_tmp(::google::protobuf::int32 value) {
  set_has_batt_tmp();
  batt_tmp_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_secgcs_2eproto__INCLUDED
