#!/usr/bin/python
# -*- coding: utf-8 -*-

"""
ZetCode PySide tutorial 

In this example, we create a bit
more complicated window layout using
the QGridLayout manager. 

author: Jan Bodnar
website: zetcode.com 
last edited: August 2011
"""

import sys
from PySide import QtGui
import math

class Example(QtGui.QWidget):
    
    def __init__(self):
        super(Example, self).__init__()
        
        self.initUI()
        
    def initUI(self):
        
        GPSLatTitle = QtGui.QLabel('GPS LATITUDE:')
        GPSLongTitle = QtGui.QLabel('GPS LONGITUDE:')
        headingTitle = QtGui.QLabel('HEADING:')
        altitudeTitle = QtGui.QLabel('ALTITUDE:')

        GPSLatUnits = QtGui.QLabel('degrees')
        GPSLongUnits = QtGui.QLabel('degrees')
        headingUnits = QtGui.QLabel('degrees')
        altitudeUnits = QtGui.QLabel('m')

        # replace with serial data
        GPSLat = str(5) # integer
        GPSLong = str(10)# integer
        heading = str(30) # (rad)
        altitude = str(100) # (m)

        GPSLatValue = QtGui.QLabel(GPSLat)
        GPSLongValue = QtGui.QLabel(GPSLong)
        headingValue = QtGui.QLabel(heading)
        altitudeValue = QtGui.QLabel(altitude)

        grid = QtGui.QGridLayout()
        grid.setSpacing(10)

        grid.addWidget(GPSLatTitle, 1, 0)
        grid.addWidget(GPSLatValue, 1, 1)
        grid.addWidget(GPSLatUnits, 1, 2)

        grid.addWidget(GPSLongTitle, 2, 0)
        grid.addWidget(GPSLongValue, 2, 1)
        grid.addWidget(GPSLongUnits, 2, 2)

        grid.addWidget(headingTitle, 3, 0)
        grid.addWidget(headingValue, 3, 1)
        grid.addWidget(headingUnits, 3, 2)

        grid.addWidget(altitudeTitle, 4, 0)
        grid.addWidget(altitudeValue, 4, 1)
        grid.addWidget(altitudeUnits, 4, 2)
        
        self.setLayout(grid) 
        
        self.setGeometry(300, 300, 350, 300)
        self.setWindowTitle('FLIGHT DATA')    
        self.show()
        
def main():
    
    app = QtGui.QApplication(sys.argv)
    ex = Example()
    sys.exit(app.exec_())


if __name__ == '__main__':
    main()
